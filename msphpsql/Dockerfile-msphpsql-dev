#Download base image ubuntu 16.04
FROM ubuntu:16.04

MAINTAINER nsidhaye

# Update Ubuntu Software repository
RUN apt-get update && \
	apt-get -y install \
	libxml2-dev \
	gcc	\
	g++ \
	autoconf \
	curl \
	make \
	apt-transport-https	 \
	unzip && apt-get clean

	
#Download PHP-7.0.12 & build it.
RUN curl -o php-7.0.12.tar.gz	http://www.php.net/distributions/php-7.0.12.tar.gz	
RUN tar -xvzf php-7.0.12.tar.gz 

# Found some times giving error like gzip: stdin: not in gzip format...
#RUN curl http://www.php.net/distributions/php-7.0.12.tar.gz | tar -xvz

#Either Install git / download zip (One can see other strategies : https://ryanfb.github.io/etc/2015/07/29/git_strategies_for_docker.html )
#Instead of installing git we are trying to get Source code from zip

RUN curl -sSL -o PHP-7.0-Linux.zip https://github.com/Microsoft/msphpsql/archive/PHP-7.0-Linux.zip

RUN unzip PHP-7.0-Linux.zip -d /REPO/

#Copy source code in EXT dir.
RUN cp -r /REPO/msphpsql-PHP-7.0-Linux/source/* /php-7.0.12/ext/
	
#install ODBC driver
RUN echo "deb [arch=amd64] https://apt-mo.trafficmanager.net/repos/mssql-ubuntu-xenial-release/ xenial main" > /etc/apt/sources.list.d/mssqlpreview.list
RUN apt-key adv --keyserver apt-mo.trafficmanager.net --recv-keys 417A0893
RUN apt-get update
RUN ACCEPT_EULA=Y apt-get install -y msodbcsql unixodbc-dev-utf16


# Build actual driver.
#RUN cd php-7.0.12 && ./buildconf --force && ./configure --enable-sqlsrv=shared --with-pdo_sqlsrv=shared
#RUN cd php-7.0.12 && ./buildconf --force && ./configure --enable-sqlsrv=shared

WORKDIR /php-7.0.12

./buildconf --force

RUN ./configure --prefix=/usr          	 \
			--sysconfdir=/etc            \
			--localstatedir=/var         \
			--datadir=/usr/share/php     \
			--mandir=/usr/share/man      \
			--enable-fpm                 \
			--with-fpm-user=apache       \
			--with-fpm-group=apache      \
			--with-config-file-path=/etc \
			--enable-calendar            \
			--enable-ftp                 \
			--with-gettext               \
			--enable-mbstring            \
			--enable-sqlsrv=shared 		 \
			--with-pdo_sqlsrv=shared

RUN make clean && make install && install -v -m644 php.ini-production /etc/php.ini 


